{"ast":null,"code":"var _jsxFileName = \"/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/home/home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, GET_POKEMONS, LOADER_TRUE } from '../../actions/index';\nimport { setLoaderTrue, setLoaderFalse } from '../../actions/index';\nimport Card from '../card/card';\nimport Nav from './../nav/nav';\nimport './home.css';\nimport Paginado from '../paginado/paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  //let allPoke = [];\n  let allPoke = useSelector(state => state.allPokemons);\n  const spinnerLoader = \"SPINNER\";\n  // const spinnerLoader = useSelector((state) => state.spinnerLoader);\n  // XXXXX Crear el estado inicial.\n\n  let dispatch = useDispatch();\n\n  //////////PAGINADO\n  // Crear un estado que setee la página actual.\n  const [currentPage, setCurrentPage] = useState(1); // 1 porque siempre empezamos de la página 1.\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12); // Cuantas cards por página.\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; // En un principio es 9\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // 0\n  const currentPokemons = allPoke.slice(indexOfFirstPokemon, indexOfLastPokemon); // Esto lo traigo del useSelector.\n\n  // 1-----0------9\n  // 2----10------20\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  //////////////\n\n  useEffect(() => {\n    // dispatch(setLoaderTrue());\n    dispatch(getPokemons());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Existing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: /*#__PURE__*/_jsxDEV(Paginado, {\n        pokemonsPerPage: pokemonsPerPage,\n        allPokemons: allPoke.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allpokemons\",\n      children: currentPokemons.map(p => /*#__PURE__*/_jsxDEV(Card, {\n        name: p.name,\n        image: p.image,\n        types: p.type,\n        className: \"cards\"\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"zrkTCyRA43HxdOz2V/biMU1zocE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","getPokemons","GET_POKEMONS","LOADER_TRUE","setLoaderTrue","setLoaderFalse","Card","Nav","Paginado","Home","allPoke","state","allPokemons","spinnerLoader","dispatch","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","length","map","p","name","image","type","id"],"sources":["/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/home/home.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, GET_POKEMONS, LOADER_TRUE } from '../../actions/index';\nimport { setLoaderTrue, setLoaderFalse } from '../../actions/index';\nimport Card from '../card/card';\nimport Nav from './../nav/nav'\nimport './home.css';\nimport Paginado from '../paginado/paginado';\n\n\n\nexport default function Home() {\n\n\n    //let allPoke = [];\n    let allPoke = useSelector((state) => state.allPokemons)\n\n\n    const spinnerLoader = \"SPINNER\";\n    // const spinnerLoader = useSelector((state) => state.spinnerLoader);\n    // XXXXX Crear el estado inicial.\n\n    let dispatch = useDispatch();\n\n\n    //////////PAGINADO\n    // Crear un estado que setee la página actual.\n    const [currentPage, setCurrentPage] = useState(1); // 1 porque siempre empezamos de la página 1.\n    const [pokemonsPerPage, setPokemonsPerPage] = useState(12); // Cuantas cards por página.\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; // En un principio es 9\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // 0\n    const currentPokemons = allPoke.slice(indexOfFirstPokemon, indexOfLastPokemon) // Esto lo traigo del useSelector.\n\n    // 1-----0------9\n    // 2----10------20\n\n    const paginado = (pageNumber) => {\n        setCurrentPage(pageNumber)\n    }\n    //////////////\n\n    useEffect(() => {\n        // dispatch(setLoaderTrue());\n        dispatch(getPokemons())\n    }, [dispatch])\n\n\n    return (\n        <div>\n            <Nav />\n\n           <select>\n            <option>All</option>\n            <option>Created</option>\n            <option>Existing</option>\n           </select>\n\n\n            <div className='pages'>\n                {\n                    <Paginado pokemonsPerPage={pokemonsPerPage} allPokemons={allPoke.length} paginado={paginado} />\n                }\n            </div>\n\n            <div className='allpokemons'>\n                {currentPokemons.map(p =>\n                    <Card name={p.name} key={p.id} image={p.image} types={p.type} className='cards' />\n                )}\n            </div>\n\n        </div>\n\n    )\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,YAAY,EAAEC,WAAW,QAAQ,qBAAqB;AAC5E,SAASC,aAAa,EAAEC,cAAc,QAAQ,qBAAqB;AACnE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAI5C,eAAe,SAASC,IAAI,GAAG;EAAA;EAG3B;EACA,IAAIC,OAAO,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAGvD,MAAMC,aAAa,GAAG,SAAS;EAC/B;EACA;;EAEA,IAAIC,QAAQ,GAAGf,WAAW,EAAE;;EAG5B;EACA;EACA,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAMsB,kBAAkB,GAAGJ,WAAW,GAAGE,eAAe,CAAC,CAAC;EAC1D,MAAMG,mBAAmB,GAAGD,kBAAkB,GAAGF,eAAe,CAAC,CAAC;EAClE,MAAMI,eAAe,GAAGX,OAAO,CAACY,KAAK,CAACF,mBAAmB,EAAED,kBAAkB,CAAC,EAAC;;EAE/E;EACA;;EAEA,MAAMI,QAAQ,GAAIC,UAAU,IAAK;IAC7BR,cAAc,CAACQ,UAAU,CAAC;EAC9B,CAAC;EACD;;EAEA1B,SAAS,CAAC,MAAM;IACZ;IACAgB,QAAQ,CAACb,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;EAGd,oBACI;IAAA,wBACI,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eAER;MAAA,wBACC;QAAA,UAAQ;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eACpB;QAAA,UAAQ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eACxB;QAAA,UAAQ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACjB,eAGR;MAAK,SAAS,EAAC,OAAO;MAAA,uBAEd,QAAC,QAAQ;QAAC,eAAe,EAAEG,eAAgB;QAAC,WAAW,EAAEP,OAAO,CAACe,MAAO;QAAC,QAAQ,EAAEF;MAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAEjG,eAEN;MAAK,SAAS,EAAC,aAAa;MAAA,UACvBF,eAAe,CAACK,GAAG,CAACC,CAAC,iBAClB,QAAC,IAAI;QAAC,IAAI,EAAEA,CAAC,CAACC,IAAK;QAAY,KAAK,EAAED,CAAC,CAACE,KAAM;QAAC,KAAK,EAAEF,CAAC,CAACG,IAAK;QAAC,SAAS,EAAC;MAAO,GAAtDH,CAAC,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAAqD;IACrF;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAGd;AAAC,GA9DuBtB,IAAI;EAAA,QAIVT,WAAW,EAOVD,WAAW;AAAA;AAAA,KAXNU,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}