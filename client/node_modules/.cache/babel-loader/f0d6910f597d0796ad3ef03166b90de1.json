{"ast":null,"code":"var _jsxFileName = \"/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/home/home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, getTypes, GET_POKEMONS, LOADER_TRUE, filterByType, GET_BY_NAME, filterByExistence, orderByName } from '../../actions/index';\nimport Card from '../card/card';\nimport Nav from './../nav/nav';\nimport './home.css';\nimport Paginado from '../paginado/paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  let allPoke = useSelector(state => state.allPokemons);\n  let allTypes = useSelector(state => state.types);\n  const spinnerLoader = \"SPINNER\";\n  // const spinnerLoader = useSelector((state) => state.spinnerLoader);\n  // XXXXX Crear el estado inicial.\n\n  let dispatch = useDispatch();\n\n  //////////PAGINADO\n  // Crear un estado que setee la página actual.\n  const [currentPage, setCurrentPage] = useState(1); // 1 porque siempre empezamos de la página 1.\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(12); // Cuantas cards por página.\n  const indexOfLastPokemon = currentPage * pokemonsPerPage; // En un principio es 9\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // 0\n  const currentPokemons = allPoke.slice(indexOfFirstPokemon, indexOfLastPokemon); // Esto lo traigo del useSelector.\n\n  // 1-----0------9\n  // 2----10------20\n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  //////////////\n\n  useEffect(() => {\n    // dispatch(setLoaderTrue());\n    dispatch(getPokemons());\n    dispatch(getTypes());\n  }, [dispatch]);\n  function handleFilterType(e) {\n    dispatch(filterByType(e.target.value));\n  }\n  function handleFilterExistence(e) {\n    dispatch(filterByExistence(e.target.value));\n  }\n  function SortByName(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrden(`Ordenado ${e.target.value}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => SortByName,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"asc\",\n        children: \"Ascendente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"desc\",\n        children: \"Descendente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFilterExistence(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"created\",\n        children: \"Created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"existing\",\n        children: \"Existing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFilterType(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), allTypes.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.name,\n          children: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: /*#__PURE__*/_jsxDEV(Paginado, {\n        pokemonsPerPage: pokemonsPerPage,\n        allPokemons: allPoke.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allpokemons\",\n      children: currentPokemons.map(p => /*#__PURE__*/_jsxDEV(Card, {\n        name: p.name,\n        image: p.image,\n        type: p.types,\n        className: \"cards\"\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"14suEHh8DbRuHtldFr8uUT7Bk00=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","getPokemons","getTypes","GET_POKEMONS","LOADER_TRUE","filterByType","GET_BY_NAME","filterByExistence","orderByName","Card","Nav","Paginado","Home","allPoke","state","allPokemons","allTypes","types","spinnerLoader","dispatch","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginado","pageNumber","handleFilterType","e","target","value","handleFilterExistence","SortByName","preventDefault","setOrden","map","t","name","length","p","image","id"],"sources":["/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/home/home.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, getTypes, GET_POKEMONS, LOADER_TRUE, filterByType, GET_BY_NAME, filterByExistence, orderByName } from '../../actions/index';\nimport Card from '../card/card';\nimport Nav from './../nav/nav'\nimport './home.css';\nimport Paginado from '../paginado/paginado';\n\n\n\nexport default function Home() {\n\n\n    let allPoke = useSelector((state) => state.allPokemons)\n    let allTypes = useSelector((state) => state.types)\n\n\n    const spinnerLoader = \"SPINNER\";\n    // const spinnerLoader = useSelector((state) => state.spinnerLoader);\n    // XXXXX Crear el estado inicial.\n\n    let dispatch = useDispatch();\n\n\n    //////////PAGINADO\n    // Crear un estado que setee la página actual.\n    const [currentPage, setCurrentPage] = useState(1); // 1 porque siempre empezamos de la página 1.\n    const [pokemonsPerPage, setPokemonsPerPage] = useState(12); // Cuantas cards por página.\n    const indexOfLastPokemon = currentPage * pokemonsPerPage; // En un principio es 9\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // 0\n    const currentPokemons = allPoke.slice(indexOfFirstPokemon, indexOfLastPokemon) // Esto lo traigo del useSelector.\n\n    // 1-----0------9\n    // 2----10------20\n\n    const paginado = (pageNumber) => {\n        setCurrentPage(pageNumber)\n    }\n    //////////////\n\n    useEffect(() => {\n        // dispatch(setLoaderTrue());\n        dispatch(getPokemons())\n        dispatch(getTypes())\n    }, [dispatch])\n\n\nfunction handleFilterType(e) {\ndispatch(filterByType(e.target.value))\n}\n\nfunction handleFilterExistence(e) {\n    dispatch(filterByExistence(e.target.value))\n}\n\nfunction SortByName(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value))\n    setCurrentPage(1);\n    setOrden(`Ordenado ${e.target.value}`)\n}\n\n\n    return (\n        <div>\n            <Nav />\n\n            <select onChange={(e) => SortByName}>\n                <option value=\"all\">All</option>\n                <option value=\"asc\">Ascendente</option>\n                <option value=\"desc\">Descendente</option>\n            </select>\n\n           <select onChange={(e) => handleFilterExistence(e)}>\n            <option value=\"all\">All</option>\n            <option value=\"created\">Created</option>\n            <option value=\"existing\">Existing</option>\n           </select>\n\n           <select onChange={(e) => handleFilterType(e)}>\n            <option value=\"all\">all</option>\n          {\n            allTypes.map((t) => {\n               return (<option value={t.name}>{t.name}</option>)\n            })\n          }\n           </select>\n\n            <div className='pages'>\n                {\n                    <Paginado pokemonsPerPage={pokemonsPerPage} allPokemons={allPoke.length} paginado={paginado} />\n                }\n            </div>\n\n            <div className='allpokemons'>\n                {currentPokemons.map(p =>\n                    <Card name={p.name} key={p.id} image={p.image} type={p.types} className='cards' />\n                )}\n            </div>\n\n        </div>\n\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}