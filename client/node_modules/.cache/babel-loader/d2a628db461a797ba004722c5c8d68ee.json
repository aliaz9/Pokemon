{"ast":null,"code":"var _jsxFileName = \"/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/paginado/paginado.jsx\";\nimport React from \"react\";\nimport './paginado.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginado(_ref) {\n  let {\n    pokemonsPerPage,\n    allPokemons,\n    paginado\n  } = _ref;\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(allPokemons / pokemonsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pages\",\n      children: [pageNumbers &&\n      // ve si pageN tiene algo.\n      pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"number\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginado(number),\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)), pageNumbers && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n// crear dos botones, uno al inicio y otro al final.\n// El del final que \n_c = Paginado;\nvar _c;\n$RefreshReg$(_c, \"Paginado\");","map":{"version":3,"names":["React","Paginado","pokemonsPerPage","allPokemons","paginado","pageNumbers","i","Math","ceil","push","map","number"],"sources":["/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/paginado/paginado.jsx"],"sourcesContent":["import React from \"react\";\nimport './paginado.css'\n\nexport default function Paginado({ pokemonsPerPage, allPokemons, paginado }) {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(allPokemons / pokemonsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return(\n        <nav>\n            <ul className=\"pages\">\n                {pageNumbers && // ve si pageN tiene algo.\n                pageNumbers.map(number => (\n                    <li className=\"number\" key={number}>\n                    <a onClick={() => paginado(number)}>{number}</a>\n                    </li>\n                ))\n                }\n\n                {pageNumbers &&\n                <button>Next</button>\n                }\n                \n            </ul>\n        </nav>\n    )\n\n  }\n\n  // crear dos botones, uno al inicio y otro al final.\n  // El del final que "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAA;AAEvB,eAAe,SAASC,QAAQ,OAA6C;EAAA,IAA5C;IAAEC,eAAe;IAAEC,WAAW;IAAEC;EAAS,CAAC;EACvE,MAAMC,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACL,WAAW,GAAGD,eAAe,CAAC,EAAEI,CAAC,EAAE,EAAE;IAChED,WAAW,CAACI,IAAI,CAACH,CAAC,CAAC;EACvB;EAEA,oBACI;IAAA,uBACI;MAAI,SAAS,EAAC,OAAO;MAAA,WAChBD,WAAW;MAAI;MAChBA,WAAW,CAACK,GAAG,CAACC,MAAM,iBAClB;QAAI,SAAS,EAAC,QAAQ;QAAA,uBACtB;UAAG,OAAO,EAAE,MAAMP,QAAQ,CAACO,MAAM,CAAE;UAAA,UAAEA;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK,GADpBA,MAAM;QAAA;QAAA;QAAA;MAAA,QAGrC,CAAC,EAGDN,WAAW,iBACZ;QAAA,UAAQ;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAGpB;IAAA;IAAA;IAAA;EAAA,QACH;AAGZ;;AAEA;AACA;AAAA,KA7BsBJ,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}