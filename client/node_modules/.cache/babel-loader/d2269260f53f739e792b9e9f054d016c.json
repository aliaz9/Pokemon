{"ast":null,"code":"var _jsxFileName = \"/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/home/home.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, GET_POKEMONS, LOADER_TRUE } from '../../actions/index';\nimport { setLoaderTrue, setLoaderFalse } from '../../actions/index';\nimport Card from '../card/card';\nimport Nav from './../nav/nav';\nimport './home.css';\nimport Paginado from '../paginado/paginado';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  let allPoke = [];\n  //let allPoke = useSelector((state) => state.allPokemons)\n\n  const spinnerLoader = \"SPINNER\";\n  // const spinnerLoader = useSelector((state) => state.spinnerLoader);\n  // XXXXX Crear el estado inicial.\n\n  let dispatch = useDispatch();\n\n  //////////PAGINADO\n  // Crear un estado que setee la página actual.\n  // const [currentPage, setCurrentPage] = useState(1); // 1 porque siempre empezamos de la página 1.\n  // const [pokemonsPerPage, setPokemonsPerPage] = useState(6); // Cuantas cards por página.\n  // const indexOfLastPokemon = currentPage * pokemonsPerPage; // En un principio es 9\n  // const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // 0\n  // const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon) // Esto lo traigo del useSelector.\n\n  // 1-----0------9\n  // 2----10------20\n\n  // const paginado = (pageNumber) => {\n  //     setCurrentPage(pageNumber)\n  // }\n  //////////////\n\n  useEffect(() => {\n    // dispatch(setLoaderTrue());\n    dispatch(getPokemons());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allPoke.map(p => /*#__PURE__*/_jsxDEV(Card, {\n        name: p.name,\n        className: \"cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","getPokemons","GET_POKEMONS","LOADER_TRUE","setLoaderTrue","setLoaderFalse","Card","Nav","Paginado","Home","allPoke","spinnerLoader","dispatch","map","p","name"],"sources":["/Users/alinaalvarez/Desktop/DEV/Pokemon/client/src/components/home/home.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemons, GET_POKEMONS, LOADER_TRUE } from '../../actions/index';\nimport { setLoaderTrue, setLoaderFalse } from '../../actions/index';\nimport Card from '../card/card';\nimport Nav from './../nav/nav'\nimport './home.css';\nimport Paginado from '../paginado/paginado';\n\n\n\nexport default function Home() {\n\n\n    let allPoke = [];\n    //let allPoke = useSelector((state) => state.allPokemons)\n\n\n    const spinnerLoader = \"SPINNER\";\n    // const spinnerLoader = useSelector((state) => state.spinnerLoader);\n    // XXXXX Crear el estado inicial.\n\n    let dispatch = useDispatch();\n\n\n    //////////PAGINADO\n    // Crear un estado que setee la página actual.\n    // const [currentPage, setCurrentPage] = useState(1); // 1 porque siempre empezamos de la página 1.\n    // const [pokemonsPerPage, setPokemonsPerPage] = useState(6); // Cuantas cards por página.\n    // const indexOfLastPokemon = currentPage * pokemonsPerPage; // En un principio es 9\n    // const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage; // 0\n    // const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon) // Esto lo traigo del useSelector.\n\n    // 1-----0------9\n    // 2----10------20\n\n    // const paginado = (pageNumber) => {\n    //     setCurrentPage(pageNumber)\n    // }\n    //////////////\n\n    useEffect(() => {\n        // dispatch(setLoaderTrue());\n        dispatch(getPokemons())\n    }, [dispatch])\n\n\n    return (\n        <div>\n            <Nav />\n\n            <div>\n                {allPoke.map(p => \n                     <Card name={p.name} className='cards' />\n                )}\n            </div>\n\n        </div>\n\n    )\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,YAAY,EAAEC,WAAW,QAAQ,qBAAqB;AAC5E,SAASC,aAAa,EAAEC,cAAc,QAAQ,qBAAqB;AACnE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAI5C,eAAe,SAASC,IAAI,GAAG;EAAA;EAG3B,IAAIC,OAAO,GAAG,EAAE;EAChB;;EAGA,MAAMC,aAAa,GAAG,SAAS;EAC/B;EACA;;EAEA,IAAIC,QAAQ,GAAGb,WAAW,EAAE;;EAG5B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZ;IACAc,QAAQ,CAACX,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAGd,oBACI;IAAA,wBACI,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eAEP;MAAA,UACKF,OAAO,CAACG,GAAG,CAACC,CAAC,iBACT,QAAC,IAAI;QAAC,IAAI,EAAEA,CAAC,CAACC,IAAK;QAAC,SAAS,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAC5C;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAGd;AAAC,GAjDuBN,IAAI;EAAA,QAWTV,WAAW;AAAA;AAAA,KAXNU,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}